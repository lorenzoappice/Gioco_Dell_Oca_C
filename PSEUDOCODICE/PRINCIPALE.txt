


gioco_dell'oca

DATI DI INPUT
opzione, contiene l'opzione desiderata dall'utente, intero, > 0, <= NUMERO_MASSIMO_OPZIONI_PRINCIPALE
file_classifica_top_10, file della classifica eventualmente aggiornato con l'inserimento di vincitore_partita, file di tipo binario
FINE_STRINGA, il carattere utilizzato come fine stringa, Carattere, = '\0'
RISPOSTA_AFFERMATIVA_MAIUSCOLO, il carattere in maiuscolo indicante la risposta affermativa da parte dell'utente, Carattere, = 'S'
RISPOSTA_AFFERMATIVA_MINUSCOLO, il carattere in minuscolo indicante la risposta affermativa da parte dell'utente, Carattere, = 's'
RISPOSTA_NEGATIVA_MAIUSCOLO, il carattere in maiuscolo indicante la risposta negativa da parte dell'utente, Carattere, = 'N'
RISPOSTA_NEGATIVA_MINUSCOLO, il carattere in minuscolo indicante la risposta negativa da parte dell'utente, Carattere, = 'n'

DATI DI OUTPUT
//inserire gli output delle varie funzioni

DATI DI LAVORO
uscita, indica la conferma della volontà da parte dell'utente di uscire dal gioco, carattere, = 'RISPOSTA_AFFERMATIVA_MAIUSCOLO' o 'RISPOSTA_AFFERMATIVA_MINUSCOLO' (indica la conferma dell'uscita dal gioco), = 'RISPOSTA_NEGATIVA_MAIUSCOLO' o 'RISPOSTA_NEGATIVA_MINUSCOLO' (indica la volontà di non uscire dal gioco)
vincitore_partita, contiene le informazioni del vincitore di una partita avviata o caricata, record di tipo vincitore

ALGORITMO
stampare_testo(file_intro) //schermata logo
leggere_da_tastiera()
uscita = RISPOSTA_NEGATIVA_MAIUSCOLO
ESEGUI
	opzione = scegliere_opzione_menu ()
	SE (opzione = 1)
	ALLORA
		vincitore_partita = iniziare_nuova_partita ()
		SE (leggere_nome_vincitore (vincitore_partita) != FINE_STRINGA)
        ALLORA
			file_classifica_top_10 = aggiornare_classifica_top_10 (file_classifica_top_10, vincitore_partita)
		FINE
	ALTRIMENTI
		SE (opzione = 2)
		ALLORA
			vincitore_partita = riprendere_partita ()
			SE (leggere_nome_vincitore (vincitore_partita) != FINE_STRINGA)
            ALLORA
				file_classifica_top_10 = aggiornare_classifica_top_10 (file_classifica_top_10, vincitore_partita)
			FINE
		ALTRIMENTI
			SE (opzione = 3)
			ALLORA
				stampare_classifica ()
			ALTRIMENTI
				SE (opzione = 4)
				ALLORA
					chiedere_aiuto ()
				ALTRIMENTI
					uscita = confermare_scelta ()
				FINE
			FINE
		FINE
	FINE
FINCHE' (uscita != RISPOSTA_AFFERMATIVA_MAIUSCOLO) AND (uscita != RISPOSTA_AFFERMATIVA_MINUSCOLO)


  
scegliere_opzione_menu

DAATI DI INPUT
opzione, scelta che l'utente deve effettuare scegliendo tra le opzioni offerte nella stampa del menu, intero, > 0, <= NUMERO_MASSIMO_OPZIONI_PRINCIPALE
NUMERO_MASSIMO_OPZIONI_PRINCIPALE, numero di opzioni disponibili all'interno del menù principale, intero, = 5

DATI DI OUTPUT
opzione, scelta effettuata dall'utente relativa all'opzione desiderata, intero, > 0, <= NUMERO_MASSIMO_OPZIONI_PRINCIPALE

stampare_testo(file_menu_principale)
ESEGUI
	opzione = leggere_da_tastiera()
	SE (opzione < 1) OR (opzione > NUMERO_MASSIMO_OPZIONI_PRINCIPALE)
		stampare_messaggio_errore(file_menu_principale)
	FINE
FINCHE' (opzione < 1) OR (opzione > NUMERO_MASSIMO_OPZIONI_PRINCIPALE)



iniziare_nuova_partita

DATI DI INPUT
vincitore_partita, record che conterrà le informazioni del vincitore della partita, record di tipo vincitore

DATI DI OUTPUT
vincitore_partita, contiene le informazioni relative al vincitore di partita_attuale, record di tipo vincitore

DATI DI LAVORO
partita_attuale, conterrà le informazioni relative al percorso e ai giocatori, record di tipo partita

ALGORITMO
partita_attuale = inizializzare_giocatori ()
partita_attuale = generare_percorso (partita_attuale)
vincitore_partita = giocare_partita (partita_attuale)



riprendere_partita

DATI DI INPUT
file_salvataggio, contiene record di tipo partita per un massimo NUMERO_MASSIMO_PARTITE, file di tipo binario

DATI DI OUTPUT
vincitore_partita, contiene le informazioni relative al vincitore di partita_attuale, record di tipo vincitore

DATI DI LAVORO
partita_attuale, contiene la partita scelta dall'utente da riprendere, record di tipo partita

ALGORITMO
partita_attuale = scegliere_partita_da_caricare()
vincitore_partita = giocare_partita (partita_attuale)



scegliere_partita_da_caricare

DATI DI INPUT
file_salvataggio, contiene record di tipo partita per un massimo NUMERO_MASSIMO_PARTITE, file di tipo binario

DATI DI OUTPUT
partita_attuale, record con le informazioni inserite della partita da riprendere scelta dall'utente, record di tipo partita

DATI DI LAVORO
elenco_partite, elenco di partite salvate caricate da file_salvataggio, Array a una dimensione (NUMERO_MASSIMO_PARTITE) di partita
slot_scelto, indica lo slot scelto dall'utente da cui caricare la partita, Intero, > 0, <= NUMERO_MASSIMO_PARTITE

ALGORITMO
elenco_partite = caricare_partite(file_salvataggio)
slot_scelto = selezionare_slot(elenco_partite)
partita_attuale = Elemento in posizione slot_scelto di elenco_partite







confermare_scelta

DATI DI INPUT
conferma_scelta, indica la conferma di un'azione scelta dall'utente, carattere, = 'RISPOSTA_AFFERMATIVA_MAIUSCOLO' o 'RISPOSTA_AFFERMATIVA_MINUSCOLO' (indica la conferma dell'uscita dal gioco), = 'RISPOSTA_NEGATIVA_MAIUSCOLO' o 'RISPOSTA_NEGATIVA_MINUSCOLO' (indica la volontà di non uscire dal gioco)
RISPOSTA_AFFERMATIVA_MAIUSCOLO, il carattere in maiuscolo indicante la risposta affermativa da parte dell'utente, Carattere, = 'S'
RISPOSTA_AFFERMATIVA_MINUSCOLO, il carattere in minuscolo indicante la risposta affermativa da parte dell'utente, Carattere, = 's'
RISPOSTA_NEGATIVA_MAIUSCOLO, il carattere in maiuscolo indicante la risposta negativa da parte dell'utente, Carattere, = N'
RISPOSTA_NEGATIVA_MINUSCOLO, il carattere in minuscolo indicante la risposta negativa da parte dell'utente, Carattere, = 'n'

DATI DI OUTPUT
conferma_scelta, indica la conferma di un'azione da parte dell'utente, carattere, = 'S' o 's' (indica la conferma dell'uscita dal gioco), = 'N' o 'n' (indica la volontà di non uscire dal gioco)

//stampare a video la richiesta di conferma dell'opzione (in stile: "Vuoi confermare?")
ESEGUI
	conferma_scelta = leggere_da_tastiera()
	SE (confermare_scelta != RISPOSTA_AFFERMATIVA_MAIUSCOLO) AND (confermare_scelta != RISPOSTA_AFFERMATIVA_MINUSCOLO) AND (confermare_scelta != RISPOSTA_NEGATIVA_MAIUSCOLO) AND (confermare_scelta != RISPOSTA_NEGATIVA_MINUSCOLO)
	ALLORA 
		//stampare a video il messaggio d'errore relativo alla conferma
	FINE
FINCHE' (confermare_scelta != RISPOSTA_AFFERMATIVA_MAIUSCOLO) AND (confermare_scelta != RISPOSTA_AFFERMATIVA_MINUSCOLO) AND (confermare_scelta != RISPOSTA_NEGATIVA_MAIUSCOLO) AND (confermare_scelta != RISPOSTA_NEGATIVA_MINUSCOLO) 